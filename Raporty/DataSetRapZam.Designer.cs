//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace S4M.Raporty {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetRapZam")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetRapZam : global::System.Data.DataSet {
        
        private ZODataTable tableZO;
        
        private global::System.Data.DataRelation relationFK_ZO_ZO_IDDOKKORYG;
        
        private global::System.Data.DataRelation relationFK_ZO_ZO_RODZAJ;
        
        private global::System.Data.DataRelation relationFK_ZO_ZO_SUPER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSetRapZam() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSetRapZam(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ZO"] != null)) {
                    base.Tables.Add(new ZODataTable(ds.Tables["ZO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZODataTable ZO {
            get {
                return this.tableZO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetRapZam cln = ((DataSetRapZam)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ZO"] != null)) {
                    base.Tables.Add(new ZODataTable(ds.Tables["ZO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableZO = ((ZODataTable)(base.Tables["ZO"]));
            if ((initTable == true)) {
                if ((this.tableZO != null)) {
                    this.tableZO.InitVars();
                }
            }
            this.relationFK_ZO_ZO_IDDOKKORYG = this.Relations["FK_ZO_ZO_IDDOKKORYG"];
            this.relationFK_ZO_ZO_RODZAJ = this.Relations["FK_ZO_ZO_RODZAJ"];
            this.relationFK_ZO_ZO_SUPER = this.Relations["FK_ZO_ZO_SUPER"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetRapZam";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetRapZam.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableZO = new ZODataTable();
            base.Tables.Add(this.tableZO);
            this.relationFK_ZO_ZO_IDDOKKORYG = new global::System.Data.DataRelation("FK_ZO_ZO_IDDOKKORYG", new global::System.Data.DataColumn[] {
                        this.tableZO.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableZO.iddokkorygColumn}, false);
            this.Relations.Add(this.relationFK_ZO_ZO_IDDOKKORYG);
            this.relationFK_ZO_ZO_RODZAJ = new global::System.Data.DataRelation("FK_ZO_ZO_RODZAJ", new global::System.Data.DataColumn[] {
                        this.tableZO.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableZO.rodzajColumn}, false);
            this.Relations.Add(this.relationFK_ZO_ZO_RODZAJ);
            this.relationFK_ZO_ZO_SUPER = new global::System.Data.DataRelation("FK_ZO_ZO_SUPER", new global::System.Data.DataColumn[] {
                        this.tableZO.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableZO.superColumn}, false);
            this.Relations.Add(this.relationFK_ZO_ZO_SUPER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeZO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetRapZam ds = new DataSetRapZam();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ZORowChangeEventHandler(object sender, ZORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZODataTable : global::System.Data.TypedTableBase<ZORow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnflag;
            
            private global::System.Data.DataColumn columnaktywny;
            
            private global::System.Data.DataColumn columnsubtyp;
            
            private global::System.Data.DataColumn columntyp;
            
            private global::System.Data.DataColumn columnznacznik;
            
            private global::System.Data.DataColumn columnrodzaj;
            
            private global::System.Data.DataColumn columnkatalog;
            
            private global::System.Data.DataColumn columninfo;
            
            private global::System.Data.DataColumn columnkod;
            
            private global::System.Data.DataColumn columnseria;
            
            private global::System.Data.DataColumn columnserianr;
            
            private global::System.Data.DataColumn columnokres;
            
            private global::System.Data.DataColumn columnseriadzial;
            
            private global::System.Data.DataColumn columnnazwa;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columndatasp;
            
            private global::System.Data.DataColumn columnopis;
            
            private global::System.Data.DataColumn columnkhid;
            
            private global::System.Data.DataColumn columnkhadid;
            
            private global::System.Data.DataColumn columnodid;
            
            private global::System.Data.DataColumn columnodadid;
            
            private global::System.Data.DataColumn columnok;
            
            private global::System.Data.DataColumn columnwplaty;
            
            private global::System.Data.DataColumn columnrabat;
            
            private global::System.Data.DataColumn columnplattyp;
            
            private global::System.Data.DataColumn columnplattermin;
            
            private global::System.Data.DataColumn columnnetto;
            
            private global::System.Data.DataColumn columnvat;
            
            private global::System.Data.DataColumn columnodebrane;
            
            private global::System.Data.DataColumn columntyp_dk;
            
            private global::System.Data.DataColumn columngrupacen;
            
            private global::System.Data.DataColumn columniddokkoryg;
            
            private global::System.Data.DataColumn columnwartoscSp;
            
            private global::System.Data.DataColumn columnexp_fk;
            
            private global::System.Data.DataColumn columnwaluta;
            
            private global::System.Data.DataColumn columnkurs;
            
            private global::System.Data.DataColumn columnzyskdod;
            
            private global::System.Data.DataColumn columnparagon;
            
            private global::System.Data.DataColumn columnkod_obcy;
            
            private global::System.Data.DataColumn columnmagazyn;
            
            private global::System.Data.DataColumn columnrozlmg;
            
            private global::System.Data.DataColumn columnformaplatn;
            
            private global::System.Data.DataColumn columnschemat;
            
            private global::System.Data.DataColumn columndatarej;
            
            private global::System.Data.DataColumn columnbufor;
            
            private global::System.Data.DataColumn columnsuper;
            
            private global::System.Data.DataColumn columnanulowany;
            
            private global::System.Data.DataColumn columnwystawil;
            
            private global::System.Data.DataColumn columncreatedBy;
            
            private global::System.Data.DataColumn columncreatedDate;
            
            private global::System.Data.DataColumn columnmodifiedBy;
            
            private global::System.Data.DataColumn columnmodifiedDate;
            
            private global::System.Data.DataColumn columnrr;
            
            private global::System.Data.DataColumn columndatawplywu;
            
            private global::System.Data.DataColumn columnwalNetto;
            
            private global::System.Data.DataColumn columnwalBrutto;
            
            private global::System.Data.DataColumn columnstatusRDF;
            
            private global::System.Data.DataColumn columnguid;
            
            private global::System.Data.DataColumn columntypceny;
            
            private global::System.Data.DataColumn columnsplitPayment;
            
            private global::System.Data.DataColumn columnstatusMig;
            
            private global::System.Data.DataColumn columnzeroVatRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZODataTable() {
                this.TableName = "ZO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ZODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ZODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn flagColumn {
                get {
                    return this.columnflag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn aktywnyColumn {
                get {
                    return this.columnaktywny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn subtypColumn {
                get {
                    return this.columnsubtyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn typColumn {
                get {
                    return this.columntyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn znacznikColumn {
                get {
                    return this.columnznacznik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rodzajColumn {
                get {
                    return this.columnrodzaj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn katalogColumn {
                get {
                    return this.columnkatalog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn infoColumn {
                get {
                    return this.columninfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kodColumn {
                get {
                    return this.columnkod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn seriaColumn {
                get {
                    return this.columnseria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn serianrColumn {
                get {
                    return this.columnserianr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn okresColumn {
                get {
                    return this.columnokres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn seriadzialColumn {
                get {
                    return this.columnseriadzial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nazwaColumn {
                get {
                    return this.columnnazwa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn dataspColumn {
                get {
                    return this.columndatasp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn opisColumn {
                get {
                    return this.columnopis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn khidColumn {
                get {
                    return this.columnkhid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn khadidColumn {
                get {
                    return this.columnkhadid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn odidColumn {
                get {
                    return this.columnodid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn odadidColumn {
                get {
                    return this.columnodadid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn okColumn {
                get {
                    return this.columnok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wplatyColumn {
                get {
                    return this.columnwplaty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rabatColumn {
                get {
                    return this.columnrabat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn plattypColumn {
                get {
                    return this.columnplattyp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn platterminColumn {
                get {
                    return this.columnplattermin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn nettoColumn {
                get {
                    return this.columnnetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn vatColumn {
                get {
                    return this.columnvat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn odebraneColumn {
                get {
                    return this.columnodebrane;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn typ_dkColumn {
                get {
                    return this.columntyp_dk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn grupacenColumn {
                get {
                    return this.columngrupacen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn iddokkorygColumn {
                get {
                    return this.columniddokkoryg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wartoscSpColumn {
                get {
                    return this.columnwartoscSp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn exp_fkColumn {
                get {
                    return this.columnexp_fk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn walutaColumn {
                get {
                    return this.columnwaluta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kursColumn {
                get {
                    return this.columnkurs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn zyskdodColumn {
                get {
                    return this.columnzyskdod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn paragonColumn {
                get {
                    return this.columnparagon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn kod_obcyColumn {
                get {
                    return this.columnkod_obcy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn magazynColumn {
                get {
                    return this.columnmagazyn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rozlmgColumn {
                get {
                    return this.columnrozlmg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn formaplatnColumn {
                get {
                    return this.columnformaplatn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn schematColumn {
                get {
                    return this.columnschemat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn datarejColumn {
                get {
                    return this.columndatarej;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn buforColumn {
                get {
                    return this.columnbufor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn superColumn {
                get {
                    return this.columnsuper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn anulowanyColumn {
                get {
                    return this.columnanulowany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn wystawilColumn {
                get {
                    return this.columnwystawil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn createdByColumn {
                get {
                    return this.columncreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn createdDateColumn {
                get {
                    return this.columncreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn modifiedByColumn {
                get {
                    return this.columnmodifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn modifiedDateColumn {
                get {
                    return this.columnmodifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn rrColumn {
                get {
                    return this.columnrr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn datawplywuColumn {
                get {
                    return this.columndatawplywu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn walNettoColumn {
                get {
                    return this.columnwalNetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn walBruttoColumn {
                get {
                    return this.columnwalBrutto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn statusRDFColumn {
                get {
                    return this.columnstatusRDF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn guidColumn {
                get {
                    return this.columnguid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn typcenyColumn {
                get {
                    return this.columntypceny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn splitPaymentColumn {
                get {
                    return this.columnsplitPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn statusMigColumn {
                get {
                    return this.columnstatusMig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn zeroVatRateColumn {
                get {
                    return this.columnzeroVatRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow this[int index] {
                get {
                    return ((ZORow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ZORowChangeEventHandler ZORowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ZORowChangeEventHandler ZORowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ZORowChangeEventHandler ZORowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ZORowChangeEventHandler ZORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddZORow(ZORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow AddZORow(
                        short flag, 
                        bool aktywny, 
                        short subtyp, 
                        short typ, 
                        short znacznik, 
                        ZORow parentZORowByFK_ZO_ZO_RODZAJ, 
                        int katalog, 
                        short info, 
                        string kod, 
                        string seria, 
                        int serianr, 
                        short okres, 
                        int seriadzial, 
                        string nazwa, 
                        System.DateTime data, 
                        System.DateTime datasp, 
                        string opis, 
                        int khid, 
                        int khadid, 
                        int odid, 
                        int odadid, 
                        short ok, 
                        double wplaty, 
                        double rabat, 
                        int plattyp, 
                        System.DateTime plattermin, 
                        double netto, 
                        double vat, 
                        string odebrane, 
                        string typ_dk, 
                        short grupacen, 
                        ZORow parentZORowByFK_ZO_ZO_IDDOKKORYG, 
                        double wartoscSp, 
                        short exp_fk, 
                        string waluta, 
                        double kurs, 
                        double zyskdod, 
                        int paragon, 
                        string kod_obcy, 
                        int magazyn, 
                        short rozlmg, 
                        int formaplatn, 
                        string schemat, 
                        System.DateTime datarej, 
                        short bufor, 
                        ZORow parentZORowByFK_ZO_ZO_SUPER, 
                        short anulowany, 
                        int wystawil, 
                        int createdBy, 
                        System.DateTime createdDate, 
                        int modifiedBy, 
                        System.DateTime modifiedDate, 
                        short rr, 
                        System.DateTime datawplywu, 
                        double walNetto, 
                        double walBrutto, 
                        short statusRDF, 
                        System.Guid guid, 
                        int typceny, 
                        bool splitPayment, 
                        short statusMig, 
                        bool zeroVatRate) {
                ZORow rowZORow = ((ZORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        flag,
                        aktywny,
                        subtyp,
                        typ,
                        znacznik,
                        null,
                        katalog,
                        info,
                        kod,
                        seria,
                        serianr,
                        okres,
                        seriadzial,
                        nazwa,
                        data,
                        datasp,
                        opis,
                        khid,
                        khadid,
                        odid,
                        odadid,
                        ok,
                        wplaty,
                        rabat,
                        plattyp,
                        plattermin,
                        netto,
                        vat,
                        odebrane,
                        typ_dk,
                        grupacen,
                        null,
                        wartoscSp,
                        exp_fk,
                        waluta,
                        kurs,
                        zyskdod,
                        paragon,
                        kod_obcy,
                        magazyn,
                        rozlmg,
                        formaplatn,
                        schemat,
                        datarej,
                        bufor,
                        null,
                        anulowany,
                        wystawil,
                        createdBy,
                        createdDate,
                        modifiedBy,
                        modifiedDate,
                        rr,
                        datawplywu,
                        walNetto,
                        walBrutto,
                        statusRDF,
                        guid,
                        typceny,
                        splitPayment,
                        statusMig,
                        zeroVatRate};
                if ((parentZORowByFK_ZO_ZO_RODZAJ != null)) {
                    columnValuesArray[6] = parentZORowByFK_ZO_ZO_RODZAJ[0];
                }
                if ((parentZORowByFK_ZO_ZO_IDDOKKORYG != null)) {
                    columnValuesArray[32] = parentZORowByFK_ZO_ZO_IDDOKKORYG[0];
                }
                if ((parentZORowByFK_ZO_ZO_SUPER != null)) {
                    columnValuesArray[46] = parentZORowByFK_ZO_ZO_SUPER[0];
                }
                rowZORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZORow);
                return rowZORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow FindByid(int id) {
                return ((ZORow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ZODataTable cln = ((ZODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnflag = base.Columns["flag"];
                this.columnaktywny = base.Columns["aktywny"];
                this.columnsubtyp = base.Columns["subtyp"];
                this.columntyp = base.Columns["typ"];
                this.columnznacznik = base.Columns["znacznik"];
                this.columnrodzaj = base.Columns["rodzaj"];
                this.columnkatalog = base.Columns["katalog"];
                this.columninfo = base.Columns["info"];
                this.columnkod = base.Columns["kod"];
                this.columnseria = base.Columns["seria"];
                this.columnserianr = base.Columns["serianr"];
                this.columnokres = base.Columns["okres"];
                this.columnseriadzial = base.Columns["seriadzial"];
                this.columnnazwa = base.Columns["nazwa"];
                this.columndata = base.Columns["data"];
                this.columndatasp = base.Columns["datasp"];
                this.columnopis = base.Columns["opis"];
                this.columnkhid = base.Columns["khid"];
                this.columnkhadid = base.Columns["khadid"];
                this.columnodid = base.Columns["odid"];
                this.columnodadid = base.Columns["odadid"];
                this.columnok = base.Columns["ok"];
                this.columnwplaty = base.Columns["wplaty"];
                this.columnrabat = base.Columns["rabat"];
                this.columnplattyp = base.Columns["plattyp"];
                this.columnplattermin = base.Columns["plattermin"];
                this.columnnetto = base.Columns["netto"];
                this.columnvat = base.Columns["vat"];
                this.columnodebrane = base.Columns["odebrane"];
                this.columntyp_dk = base.Columns["typ_dk"];
                this.columngrupacen = base.Columns["grupacen"];
                this.columniddokkoryg = base.Columns["iddokkoryg"];
                this.columnwartoscSp = base.Columns["wartoscSp"];
                this.columnexp_fk = base.Columns["exp_fk"];
                this.columnwaluta = base.Columns["waluta"];
                this.columnkurs = base.Columns["kurs"];
                this.columnzyskdod = base.Columns["zyskdod"];
                this.columnparagon = base.Columns["paragon"];
                this.columnkod_obcy = base.Columns["kod_obcy"];
                this.columnmagazyn = base.Columns["magazyn"];
                this.columnrozlmg = base.Columns["rozlmg"];
                this.columnformaplatn = base.Columns["formaplatn"];
                this.columnschemat = base.Columns["schemat"];
                this.columndatarej = base.Columns["datarej"];
                this.columnbufor = base.Columns["bufor"];
                this.columnsuper = base.Columns["super"];
                this.columnanulowany = base.Columns["anulowany"];
                this.columnwystawil = base.Columns["wystawil"];
                this.columncreatedBy = base.Columns["createdBy"];
                this.columncreatedDate = base.Columns["createdDate"];
                this.columnmodifiedBy = base.Columns["modifiedBy"];
                this.columnmodifiedDate = base.Columns["modifiedDate"];
                this.columnrr = base.Columns["rr"];
                this.columndatawplywu = base.Columns["datawplywu"];
                this.columnwalNetto = base.Columns["walNetto"];
                this.columnwalBrutto = base.Columns["walBrutto"];
                this.columnstatusRDF = base.Columns["statusRDF"];
                this.columnguid = base.Columns["guid"];
                this.columntypceny = base.Columns["typceny"];
                this.columnsplitPayment = base.Columns["splitPayment"];
                this.columnstatusMig = base.Columns["statusMig"];
                this.columnzeroVatRate = base.Columns["zeroVatRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnflag = new global::System.Data.DataColumn("flag", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflag);
                this.columnaktywny = new global::System.Data.DataColumn("aktywny", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaktywny);
                this.columnsubtyp = new global::System.Data.DataColumn("subtyp", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtyp);
                this.columntyp = new global::System.Data.DataColumn("typ", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntyp);
                this.columnznacznik = new global::System.Data.DataColumn("znacznik", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnznacznik);
                this.columnrodzaj = new global::System.Data.DataColumn("rodzaj", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrodzaj);
                this.columnkatalog = new global::System.Data.DataColumn("katalog", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkatalog);
                this.columninfo = new global::System.Data.DataColumn("info", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninfo);
                this.columnkod = new global::System.Data.DataColumn("kod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod);
                this.columnseria = new global::System.Data.DataColumn("seria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseria);
                this.columnserianr = new global::System.Data.DataColumn("serianr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserianr);
                this.columnokres = new global::System.Data.DataColumn("okres", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnokres);
                this.columnseriadzial = new global::System.Data.DataColumn("seriadzial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseriadzial);
                this.columnnazwa = new global::System.Data.DataColumn("nazwa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnazwa);
                this.columndata = new global::System.Data.DataColumn("data", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columndatasp = new global::System.Data.DataColumn("datasp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatasp);
                this.columnopis = new global::System.Data.DataColumn("opis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopis);
                this.columnkhid = new global::System.Data.DataColumn("khid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkhid);
                this.columnkhadid = new global::System.Data.DataColumn("khadid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkhadid);
                this.columnodid = new global::System.Data.DataColumn("odid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnodid);
                this.columnodadid = new global::System.Data.DataColumn("odadid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnodadid);
                this.columnok = new global::System.Data.DataColumn("ok", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnok);
                this.columnwplaty = new global::System.Data.DataColumn("wplaty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwplaty);
                this.columnrabat = new global::System.Data.DataColumn("rabat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrabat);
                this.columnplattyp = new global::System.Data.DataColumn("plattyp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplattyp);
                this.columnplattermin = new global::System.Data.DataColumn("plattermin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplattermin);
                this.columnnetto = new global::System.Data.DataColumn("netto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnetto);
                this.columnvat = new global::System.Data.DataColumn("vat", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvat);
                this.columnodebrane = new global::System.Data.DataColumn("odebrane", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnodebrane);
                this.columntyp_dk = new global::System.Data.DataColumn("typ_dk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntyp_dk);
                this.columngrupacen = new global::System.Data.DataColumn("grupacen", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrupacen);
                this.columniddokkoryg = new global::System.Data.DataColumn("iddokkoryg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniddokkoryg);
                this.columnwartoscSp = new global::System.Data.DataColumn("wartoscSp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwartoscSp);
                this.columnexp_fk = new global::System.Data.DataColumn("exp_fk", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexp_fk);
                this.columnwaluta = new global::System.Data.DataColumn("waluta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwaluta);
                this.columnkurs = new global::System.Data.DataColumn("kurs", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkurs);
                this.columnzyskdod = new global::System.Data.DataColumn("zyskdod", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzyskdod);
                this.columnparagon = new global::System.Data.DataColumn("paragon", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparagon);
                this.columnkod_obcy = new global::System.Data.DataColumn("kod_obcy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkod_obcy);
                this.columnmagazyn = new global::System.Data.DataColumn("magazyn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmagazyn);
                this.columnrozlmg = new global::System.Data.DataColumn("rozlmg", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrozlmg);
                this.columnformaplatn = new global::System.Data.DataColumn("formaplatn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnformaplatn);
                this.columnschemat = new global::System.Data.DataColumn("schemat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnschemat);
                this.columndatarej = new global::System.Data.DataColumn("datarej", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatarej);
                this.columnbufor = new global::System.Data.DataColumn("bufor", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbufor);
                this.columnsuper = new global::System.Data.DataColumn("super", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuper);
                this.columnanulowany = new global::System.Data.DataColumn("anulowany", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanulowany);
                this.columnwystawil = new global::System.Data.DataColumn("wystawil", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwystawil);
                this.columncreatedBy = new global::System.Data.DataColumn("createdBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedBy);
                this.columncreatedDate = new global::System.Data.DataColumn("createdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedDate);
                this.columnmodifiedBy = new global::System.Data.DataColumn("modifiedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedBy);
                this.columnmodifiedDate = new global::System.Data.DataColumn("modifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedDate);
                this.columnrr = new global::System.Data.DataColumn("rr", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrr);
                this.columndatawplywu = new global::System.Data.DataColumn("datawplywu", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatawplywu);
                this.columnwalNetto = new global::System.Data.DataColumn("walNetto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwalNetto);
                this.columnwalBrutto = new global::System.Data.DataColumn("walBrutto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwalBrutto);
                this.columnstatusRDF = new global::System.Data.DataColumn("statusRDF", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusRDF);
                this.columnguid = new global::System.Data.DataColumn("guid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnguid);
                this.columntypceny = new global::System.Data.DataColumn("typceny", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntypceny);
                this.columnsplitPayment = new global::System.Data.DataColumn("splitPayment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsplitPayment);
                this.columnstatusMig = new global::System.Data.DataColumn("statusMig", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatusMig);
                this.columnzeroVatRate = new global::System.Data.DataColumn("zeroVatRate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzeroVatRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnflag.AllowDBNull = false;
                this.columnaktywny.AllowDBNull = false;
                this.columnsubtyp.AllowDBNull = false;
                this.columntyp.AllowDBNull = false;
                this.columnznacznik.AllowDBNull = false;
                this.columninfo.AllowDBNull = false;
                this.columnkod.AllowDBNull = false;
                this.columnkod.MaxLength = 40;
                this.columnseria.AllowDBNull = false;
                this.columnseria.MaxLength = 5;
                this.columnserianr.AllowDBNull = false;
                this.columnokres.AllowDBNull = false;
                this.columnseriadzial.AllowDBNull = false;
                this.columnnazwa.AllowDBNull = false;
                this.columnnazwa.MaxLength = 40;
                this.columnopis.AllowDBNull = false;
                this.columnopis.MaxLength = 80;
                this.columnok.AllowDBNull = false;
                this.columnwplaty.AllowDBNull = false;
                this.columnrabat.AllowDBNull = false;
                this.columnnetto.AllowDBNull = false;
                this.columnvat.AllowDBNull = false;
                this.columnodebrane.AllowDBNull = false;
                this.columnodebrane.MaxLength = 40;
                this.columntyp_dk.AllowDBNull = false;
                this.columntyp_dk.MaxLength = 4;
                this.columngrupacen.AllowDBNull = false;
                this.columnwartoscSp.AllowDBNull = false;
                this.columnexp_fk.AllowDBNull = false;
                this.columnwaluta.AllowDBNull = false;
                this.columnwaluta.MaxLength = 3;
                this.columnkurs.AllowDBNull = false;
                this.columnzyskdod.AllowDBNull = false;
                this.columnparagon.AllowDBNull = false;
                this.columnkod_obcy.AllowDBNull = false;
                this.columnkod_obcy.MaxLength = 40;
                this.columnrozlmg.AllowDBNull = false;
                this.columnschemat.AllowDBNull = false;
                this.columnschemat.MaxLength = 4;
                this.columnbufor.AllowDBNull = false;
                this.columnanulowany.AllowDBNull = false;
                this.columnrr.AllowDBNull = false;
                this.columnwalNetto.AllowDBNull = false;
                this.columnwalBrutto.AllowDBNull = false;
                this.columnstatusRDF.AllowDBNull = false;
                this.columnguid.AllowDBNull = false;
                this.columntypceny.AllowDBNull = false;
                this.columnsplitPayment.AllowDBNull = false;
                this.columnstatusMig.AllowDBNull = false;
                this.columnzeroVatRate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow NewZORow() {
                return ((ZORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ZORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZORowChanged != null)) {
                    this.ZORowChanged(this, new ZORowChangeEvent(((ZORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZORowChanging != null)) {
                    this.ZORowChanging(this, new ZORowChangeEvent(((ZORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZORowDeleted != null)) {
                    this.ZORowDeleted(this, new ZORowChangeEvent(((ZORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZORowDeleting != null)) {
                    this.ZORowDeleting(this, new ZORowChangeEvent(((ZORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveZORow(ZORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRapZam ds = new DataSetRapZam();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ZORow : global::System.Data.DataRow {
            
            private ZODataTable tableZO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ZORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZO = ((ZODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableZO.idColumn]));
                }
                set {
                    this[this.tableZO.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short flag {
                get {
                    return ((short)(this[this.tableZO.flagColumn]));
                }
                set {
                    this[this.tableZO.flagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool aktywny {
                get {
                    return ((bool)(this[this.tableZO.aktywnyColumn]));
                }
                set {
                    this[this.tableZO.aktywnyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short subtyp {
                get {
                    return ((short)(this[this.tableZO.subtypColumn]));
                }
                set {
                    this[this.tableZO.subtypColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short typ {
                get {
                    return ((short)(this[this.tableZO.typColumn]));
                }
                set {
                    this[this.tableZO.typColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short znacznik {
                get {
                    return ((short)(this[this.tableZO.znacznikColumn]));
                }
                set {
                    this[this.tableZO.znacznikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int rodzaj {
                get {
                    try {
                        return ((int)(this[this.tableZO.rodzajColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'rodzaj\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.rodzajColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int katalog {
                get {
                    try {
                        return ((int)(this[this.tableZO.katalogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'katalog\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.katalogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short info {
                get {
                    return ((short)(this[this.tableZO.infoColumn]));
                }
                set {
                    this[this.tableZO.infoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string kod {
                get {
                    return ((string)(this[this.tableZO.kodColumn]));
                }
                set {
                    this[this.tableZO.kodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string seria {
                get {
                    return ((string)(this[this.tableZO.seriaColumn]));
                }
                set {
                    this[this.tableZO.seriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int serianr {
                get {
                    return ((int)(this[this.tableZO.serianrColumn]));
                }
                set {
                    this[this.tableZO.serianrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short okres {
                get {
                    return ((short)(this[this.tableZO.okresColumn]));
                }
                set {
                    this[this.tableZO.okresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int seriadzial {
                get {
                    return ((int)(this[this.tableZO.seriadzialColumn]));
                }
                set {
                    this[this.tableZO.seriadzialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string nazwa {
                get {
                    return ((string)(this[this.tableZO.nazwaColumn]));
                }
                set {
                    this[this.tableZO.nazwaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime data {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'data\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime datasp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.dataspColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'datasp\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.dataspColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string opis {
                get {
                    return ((string)(this[this.tableZO.opisColumn]));
                }
                set {
                    this[this.tableZO.opisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int khid {
                get {
                    try {
                        return ((int)(this[this.tableZO.khidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'khid\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.khidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int khadid {
                get {
                    try {
                        return ((int)(this[this.tableZO.khadidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'khadid\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.khadidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int odid {
                get {
                    try {
                        return ((int)(this[this.tableZO.odidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'odid\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.odidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int odadid {
                get {
                    try {
                        return ((int)(this[this.tableZO.odadidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'odadid\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.odadidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short ok {
                get {
                    return ((short)(this[this.tableZO.okColumn]));
                }
                set {
                    this[this.tableZO.okColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double wplaty {
                get {
                    return ((double)(this[this.tableZO.wplatyColumn]));
                }
                set {
                    this[this.tableZO.wplatyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double rabat {
                get {
                    return ((double)(this[this.tableZO.rabatColumn]));
                }
                set {
                    this[this.tableZO.rabatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int plattyp {
                get {
                    try {
                        return ((int)(this[this.tableZO.plattypColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'plattyp\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.plattypColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime plattermin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.platterminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'plattermin\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.platterminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double netto {
                get {
                    return ((double)(this[this.tableZO.nettoColumn]));
                }
                set {
                    this[this.tableZO.nettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double vat {
                get {
                    return ((double)(this[this.tableZO.vatColumn]));
                }
                set {
                    this[this.tableZO.vatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string odebrane {
                get {
                    return ((string)(this[this.tableZO.odebraneColumn]));
                }
                set {
                    this[this.tableZO.odebraneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string typ_dk {
                get {
                    return ((string)(this[this.tableZO.typ_dkColumn]));
                }
                set {
                    this[this.tableZO.typ_dkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short grupacen {
                get {
                    return ((short)(this[this.tableZO.grupacenColumn]));
                }
                set {
                    this[this.tableZO.grupacenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int iddokkoryg {
                get {
                    try {
                        return ((int)(this[this.tableZO.iddokkorygColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'iddokkoryg\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.iddokkorygColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double wartoscSp {
                get {
                    return ((double)(this[this.tableZO.wartoscSpColumn]));
                }
                set {
                    this[this.tableZO.wartoscSpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short exp_fk {
                get {
                    return ((short)(this[this.tableZO.exp_fkColumn]));
                }
                set {
                    this[this.tableZO.exp_fkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string waluta {
                get {
                    return ((string)(this[this.tableZO.walutaColumn]));
                }
                set {
                    this[this.tableZO.walutaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double kurs {
                get {
                    return ((double)(this[this.tableZO.kursColumn]));
                }
                set {
                    this[this.tableZO.kursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double zyskdod {
                get {
                    return ((double)(this[this.tableZO.zyskdodColumn]));
                }
                set {
                    this[this.tableZO.zyskdodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int paragon {
                get {
                    return ((int)(this[this.tableZO.paragonColumn]));
                }
                set {
                    this[this.tableZO.paragonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string kod_obcy {
                get {
                    return ((string)(this[this.tableZO.kod_obcyColumn]));
                }
                set {
                    this[this.tableZO.kod_obcyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int magazyn {
                get {
                    try {
                        return ((int)(this[this.tableZO.magazynColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'magazyn\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.magazynColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short rozlmg {
                get {
                    return ((short)(this[this.tableZO.rozlmgColumn]));
                }
                set {
                    this[this.tableZO.rozlmgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int formaplatn {
                get {
                    try {
                        return ((int)(this[this.tableZO.formaplatnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'formaplatn\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.formaplatnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string schemat {
                get {
                    return ((string)(this[this.tableZO.schematColumn]));
                }
                set {
                    this[this.tableZO.schematColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime datarej {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.datarejColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'datarej\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.datarejColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short bufor {
                get {
                    return ((short)(this[this.tableZO.buforColumn]));
                }
                set {
                    this[this.tableZO.buforColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int super {
                get {
                    try {
                        return ((int)(this[this.tableZO.superColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'super\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.superColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short anulowany {
                get {
                    return ((short)(this[this.tableZO.anulowanyColumn]));
                }
                set {
                    this[this.tableZO.anulowanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int wystawil {
                get {
                    try {
                        return ((int)(this[this.tableZO.wystawilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'wystawil\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.wystawilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int createdBy {
                get {
                    try {
                        return ((int)(this[this.tableZO.createdByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'createdBy\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.createdByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime createdDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.createdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'createdDate\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.createdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int modifiedBy {
                get {
                    try {
                        return ((int)(this[this.tableZO.modifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'modifiedBy\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.modifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime modifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.modifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'modifiedDate\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.modifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short rr {
                get {
                    return ((short)(this[this.tableZO.rrColumn]));
                }
                set {
                    this[this.tableZO.rrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime datawplywu {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZO.datawplywuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Wartość z kolumny \'datawplywu\' w tabeli \'ZO\' to DBNull.", e);
                    }
                }
                set {
                    this[this.tableZO.datawplywuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double walNetto {
                get {
                    return ((double)(this[this.tableZO.walNettoColumn]));
                }
                set {
                    this[this.tableZO.walNettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double walBrutto {
                get {
                    return ((double)(this[this.tableZO.walBruttoColumn]));
                }
                set {
                    this[this.tableZO.walBruttoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short statusRDF {
                get {
                    return ((short)(this[this.tableZO.statusRDFColumn]));
                }
                set {
                    this[this.tableZO.statusRDFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid guid {
                get {
                    return ((global::System.Guid)(this[this.tableZO.guidColumn]));
                }
                set {
                    this[this.tableZO.guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int typceny {
                get {
                    return ((int)(this[this.tableZO.typcenyColumn]));
                }
                set {
                    this[this.tableZO.typcenyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool splitPayment {
                get {
                    return ((bool)(this[this.tableZO.splitPaymentColumn]));
                }
                set {
                    this[this.tableZO.splitPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short statusMig {
                get {
                    return ((short)(this[this.tableZO.statusMigColumn]));
                }
                set {
                    this[this.tableZO.statusMigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool zeroVatRate {
                get {
                    return ((bool)(this[this.tableZO.zeroVatRateColumn]));
                }
                set {
                    this[this.tableZO.zeroVatRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow ZORowParentByFK_ZO_ZO_IDDOKKORYG {
                get {
                    return ((ZORow)(this.GetParentRow(this.Table.ParentRelations["FK_ZO_ZO_IDDOKKORYG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ZO_ZO_IDDOKKORYG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow ZORowParentByFK_ZO_ZO_RODZAJ {
                get {
                    return ((ZORow)(this.GetParentRow(this.Table.ParentRelations["FK_ZO_ZO_RODZAJ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ZO_ZO_RODZAJ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow ZORowParentByFK_ZO_ZO_SUPER {
                get {
                    return ((ZORow)(this.GetParentRow(this.Table.ParentRelations["FK_ZO_ZO_SUPER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ZO_ZO_SUPER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsrodzajNull() {
                return this.IsNull(this.tableZO.rodzajColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetrodzajNull() {
                this[this.tableZO.rodzajColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IskatalogNull() {
                return this.IsNull(this.tableZO.katalogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetkatalogNull() {
                this[this.tableZO.katalogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdataNull() {
                return this.IsNull(this.tableZO.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdataNull() {
                this[this.tableZO.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdataspNull() {
                return this.IsNull(this.tableZO.dataspColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdataspNull() {
                this[this.tableZO.dataspColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IskhidNull() {
                return this.IsNull(this.tableZO.khidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetkhidNull() {
                this[this.tableZO.khidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IskhadidNull() {
                return this.IsNull(this.tableZO.khadidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetkhadidNull() {
                this[this.tableZO.khadidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsodidNull() {
                return this.IsNull(this.tableZO.odidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetodidNull() {
                this[this.tableZO.odidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsodadidNull() {
                return this.IsNull(this.tableZO.odadidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetodadidNull() {
                this[this.tableZO.odadidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsplattypNull() {
                return this.IsNull(this.tableZO.plattypColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetplattypNull() {
                this[this.tableZO.plattypColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsplatterminNull() {
                return this.IsNull(this.tableZO.platterminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetplatterminNull() {
                this[this.tableZO.platterminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsiddokkorygNull() {
                return this.IsNull(this.tableZO.iddokkorygColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetiddokkorygNull() {
                this[this.tableZO.iddokkorygColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmagazynNull() {
                return this.IsNull(this.tableZO.magazynColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmagazynNull() {
                this[this.tableZO.magazynColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsformaplatnNull() {
                return this.IsNull(this.tableZO.formaplatnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetformaplatnNull() {
                this[this.tableZO.formaplatnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdatarejNull() {
                return this.IsNull(this.tableZO.datarejColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdatarejNull() {
                this[this.tableZO.datarejColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IssuperNull() {
                return this.IsNull(this.tableZO.superColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetsuperNull() {
                this[this.tableZO.superColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IswystawilNull() {
                return this.IsNull(this.tableZO.wystawilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetwystawilNull() {
                this[this.tableZO.wystawilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscreatedByNull() {
                return this.IsNull(this.tableZO.createdByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcreatedByNull() {
                this[this.tableZO.createdByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscreatedDateNull() {
                return this.IsNull(this.tableZO.createdDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcreatedDateNull() {
                this[this.tableZO.createdDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmodifiedByNull() {
                return this.IsNull(this.tableZO.modifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmodifiedByNull() {
                this[this.tableZO.modifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsmodifiedDateNull() {
                return this.IsNull(this.tableZO.modifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetmodifiedDateNull() {
                this[this.tableZO.modifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdatawplywuNull() {
                return this.IsNull(this.tableZO.datawplywuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdatawplywuNull() {
                this[this.tableZO.datawplywuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow[] GetZORowsByFK_ZO_ZO_IDDOKKORYG() {
                if ((this.Table.ChildRelations["FK_ZO_ZO_IDDOKKORYG"] == null)) {
                    return new ZORow[0];
                }
                else {
                    return ((ZORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ZO_ZO_IDDOKKORYG"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow[] GetZORowsByFK_ZO_ZO_RODZAJ() {
                if ((this.Table.ChildRelations["FK_ZO_ZO_RODZAJ"] == null)) {
                    return new ZORow[0];
                }
                else {
                    return ((ZORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ZO_ZO_RODZAJ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow[] GetZORowsByFK_ZO_ZO_SUPER() {
                if ((this.Table.ChildRelations["FK_ZO_ZO_SUPER"] == null)) {
                    return new ZORow[0];
                }
                else {
                    return ((ZORow[])(base.GetChildRows(this.Table.ChildRelations["FK_ZO_ZO_SUPER"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ZORowChangeEvent : global::System.EventArgs {
            
            private ZORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORowChangeEvent(ZORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ZORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace S4M.Raporty.DataSetRapZamTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ZOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ZOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ZO";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("flag", "flag");
            tableMapping.ColumnMappings.Add("aktywny", "aktywny");
            tableMapping.ColumnMappings.Add("subtyp", "subtyp");
            tableMapping.ColumnMappings.Add("typ", "typ");
            tableMapping.ColumnMappings.Add("znacznik", "znacznik");
            tableMapping.ColumnMappings.Add("rodzaj", "rodzaj");
            tableMapping.ColumnMappings.Add("katalog", "katalog");
            tableMapping.ColumnMappings.Add("info", "info");
            tableMapping.ColumnMappings.Add("kod", "kod");
            tableMapping.ColumnMappings.Add("seria", "seria");
            tableMapping.ColumnMappings.Add("serianr", "serianr");
            tableMapping.ColumnMappings.Add("okres", "okres");
            tableMapping.ColumnMappings.Add("seriadzial", "seriadzial");
            tableMapping.ColumnMappings.Add("nazwa", "nazwa");
            tableMapping.ColumnMappings.Add("data", "data");
            tableMapping.ColumnMappings.Add("datasp", "datasp");
            tableMapping.ColumnMappings.Add("opis", "opis");
            tableMapping.ColumnMappings.Add("khid", "khid");
            tableMapping.ColumnMappings.Add("khadid", "khadid");
            tableMapping.ColumnMappings.Add("odid", "odid");
            tableMapping.ColumnMappings.Add("odadid", "odadid");
            tableMapping.ColumnMappings.Add("ok", "ok");
            tableMapping.ColumnMappings.Add("wplaty", "wplaty");
            tableMapping.ColumnMappings.Add("rabat", "rabat");
            tableMapping.ColumnMappings.Add("plattyp", "plattyp");
            tableMapping.ColumnMappings.Add("plattermin", "plattermin");
            tableMapping.ColumnMappings.Add("netto", "netto");
            tableMapping.ColumnMappings.Add("vat", "vat");
            tableMapping.ColumnMappings.Add("odebrane", "odebrane");
            tableMapping.ColumnMappings.Add("typ_dk", "typ_dk");
            tableMapping.ColumnMappings.Add("grupacen", "grupacen");
            tableMapping.ColumnMappings.Add("iddokkoryg", "iddokkoryg");
            tableMapping.ColumnMappings.Add("wartoscSp", "wartoscSp");
            tableMapping.ColumnMappings.Add("exp_fk", "exp_fk");
            tableMapping.ColumnMappings.Add("waluta", "waluta");
            tableMapping.ColumnMappings.Add("kurs", "kurs");
            tableMapping.ColumnMappings.Add("zyskdod", "zyskdod");
            tableMapping.ColumnMappings.Add("paragon", "paragon");
            tableMapping.ColumnMappings.Add("kod_obcy", "kod_obcy");
            tableMapping.ColumnMappings.Add("magazyn", "magazyn");
            tableMapping.ColumnMappings.Add("rozlmg", "rozlmg");
            tableMapping.ColumnMappings.Add("formaplatn", "formaplatn");
            tableMapping.ColumnMappings.Add("schemat", "schemat");
            tableMapping.ColumnMappings.Add("datarej", "datarej");
            tableMapping.ColumnMappings.Add("bufor", "bufor");
            tableMapping.ColumnMappings.Add("super", "super");
            tableMapping.ColumnMappings.Add("anulowany", "anulowany");
            tableMapping.ColumnMappings.Add("wystawil", "wystawil");
            tableMapping.ColumnMappings.Add("createdBy", "createdBy");
            tableMapping.ColumnMappings.Add("createdDate", "createdDate");
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy");
            tableMapping.ColumnMappings.Add("modifiedDate", "modifiedDate");
            tableMapping.ColumnMappings.Add("rr", "rr");
            tableMapping.ColumnMappings.Add("datawplywu", "datawplywu");
            tableMapping.ColumnMappings.Add("walNetto", "walNetto");
            tableMapping.ColumnMappings.Add("walBrutto", "walBrutto");
            tableMapping.ColumnMappings.Add("statusRDF", "statusRDF");
            tableMapping.ColumnMappings.Add("guid", "guid");
            tableMapping.ColumnMappings.Add("typceny", "typceny");
            tableMapping.ColumnMappings.Add("splitPayment", "splitPayment");
            tableMapping.ColumnMappings.Add("statusMig", "statusMig");
            tableMapping.ColumnMappings.Add("zeroVatRate", "zeroVatRate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [HM].[ZO] WHERE (([id] = @Original_id) AND ([flag] = @Original_flag) " +
                "AND ([aktywny] = @Original_aktywny) AND ([subtyp] = @Original_subtyp) AND ([typ]" +
                " = @Original_typ) AND ([znacznik] = @Original_znacznik) AND ((@IsNull_rodzaj = 1" +
                " AND [rodzaj] IS NULL) OR ([rodzaj] = @Original_rodzaj)) AND ((@IsNull_katalog =" +
                " 1 AND [katalog] IS NULL) OR ([katalog] = @Original_katalog)) AND ([info] = @Ori" +
                "ginal_info) AND ([kod] = @Original_kod) AND ([seria] = @Original_seria) AND ([se" +
                "rianr] = @Original_serianr) AND ([okres] = @Original_okres) AND ([seriadzial] = " +
                "@Original_seriadzial) AND ([nazwa] = @Original_nazwa) AND ((@IsNull_data = 1 AND" +
                " [data] IS NULL) OR ([data] = @Original_data)) AND ((@IsNull_datasp = 1 AND [dat" +
                "asp] IS NULL) OR ([datasp] = @Original_datasp)) AND ([opis] = @Original_opis) AN" +
                "D ((@IsNull_khid = 1 AND [khid] IS NULL) OR ([khid] = @Original_khid)) AND ((@Is" +
                "Null_khadid = 1 AND [khadid] IS NULL) OR ([khadid] = @Original_khadid)) AND ((@I" +
                "sNull_odid = 1 AND [odid] IS NULL) OR ([odid] = @Original_odid)) AND ((@IsNull_o" +
                "dadid = 1 AND [odadid] IS NULL) OR ([odadid] = @Original_odadid)) AND ([ok] = @O" +
                "riginal_ok) AND ([wplaty] = @Original_wplaty) AND ([rabat] = @Original_rabat) AN" +
                "D ((@IsNull_plattyp = 1 AND [plattyp] IS NULL) OR ([plattyp] = @Original_plattyp" +
                ")) AND ((@IsNull_plattermin = 1 AND [plattermin] IS NULL) OR ([plattermin] = @Or" +
                "iginal_plattermin)) AND ([netto] = @Original_netto) AND ([vat] = @Original_vat) " +
                "AND ([odebrane] = @Original_odebrane) AND ([typ_dk] = @Original_typ_dk) AND ([gr" +
                "upacen] = @Original_grupacen) AND ((@IsNull_iddokkoryg = 1 AND [iddokkoryg] IS N" +
                "ULL) OR ([iddokkoryg] = @Original_iddokkoryg)) AND ([wartoscSp] = @Original_wart" +
                "oscSp) AND ([exp_fk] = @Original_exp_fk) AND ([waluta] = @Original_waluta) AND (" +
                "[kurs] = @Original_kurs) AND ([zyskdod] = @Original_zyskdod) AND ([paragon] = @O" +
                "riginal_paragon) AND ([kod_obcy] = @Original_kod_obcy) AND ((@IsNull_magazyn = 1" +
                " AND [magazyn] IS NULL) OR ([magazyn] = @Original_magazyn)) AND ([rozlmg] = @Ori" +
                "ginal_rozlmg) AND ((@IsNull_formaplatn = 1 AND [formaplatn] IS NULL) OR ([formap" +
                "latn] = @Original_formaplatn)) AND ([schemat] = @Original_schemat) AND ((@IsNull" +
                "_datarej = 1 AND [datarej] IS NULL) OR ([datarej] = @Original_datarej)) AND ([bu" +
                "for] = @Original_bufor) AND ((@IsNull_super = 1 AND [super] IS NULL) OR ([super]" +
                " = @Original_super)) AND ([anulowany] = @Original_anulowany) AND ((@IsNull_wysta" +
                "wil = 1 AND [wystawil] IS NULL) OR ([wystawil] = @Original_wystawil)) AND ((@IsN" +
                "ull_createdBy = 1 AND [createdBy] IS NULL) OR ([createdBy] = @Original_createdBy" +
                ")) AND ((@IsNull_createdDate = 1 AND [createdDate] IS NULL) OR ([createdDate] = " +
                "@Original_createdDate)) AND ((@IsNull_modifiedBy = 1 AND [modifiedBy] IS NULL) O" +
                "R ([modifiedBy] = @Original_modifiedBy)) AND ((@IsNull_modifiedDate = 1 AND [mod" +
                "ifiedDate] IS NULL) OR ([modifiedDate] = @Original_modifiedDate)) AND ([rr] = @O" +
                "riginal_rr) AND ((@IsNull_datawplywu = 1 AND [datawplywu] IS NULL) OR ([datawply" +
                "wu] = @Original_datawplywu)) AND ([walNetto] = @Original_walNetto) AND ([walBrut" +
                "to] = @Original_walBrutto) AND ([statusRDF] = @Original_statusRDF) AND ([guid] =" +
                " @Original_guid) AND ([typceny] = @Original_typceny) AND ([splitPayment] = @Orig" +
                "inal_splitPayment) AND ([statusMig] = @Original_statusMig) AND ([zeroVatRate] = " +
                "@Original_zeroVatRate))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aktywny", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aktywny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtyp", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtyp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_znacznik", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "znacznik", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_info", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "info", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_serianr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serianr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_okres", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "okres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seriadzial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seriadzial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nazwa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nazwa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datasp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datasp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_opis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ok", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wplaty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wplaty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rabat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rabat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_plattermin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_plattermin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_netto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "netto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odebrane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odebrane", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typ_dk", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ_dk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grupacen", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grupacen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscSp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscSp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_exp_fk", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exp_fk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_waluta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "waluta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kurs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kurs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zyskdod", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zyskdod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_paragon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paragon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_obcy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_obcy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rozlmg", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rozlmg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_schemat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "schemat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datarej", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datarej", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bufor", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bufor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_anulowany", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anulowany", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifiedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rr", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datawplywu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datawplywu", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_walNetto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walNetto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_walBrutto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walBrutto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusRDF", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusRDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typceny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typceny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_splitPayment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "splitPayment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusMig", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusMig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zeroVatRate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zeroVatRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [HM].[ZO] ([flag], [aktywny], [subtyp], [typ], [znacznik], [rodzaj], " +
                "[katalog], [info], [kod], [seria], [serianr], [okres], [seriadzial], [nazwa], [d" +
                "ata], [datasp], [opis], [khid], [khadid], [odid], [odadid], [ok], [wplaty], [rab" +
                "at], [plattyp], [plattermin], [netto], [vat], [odebrane], [typ_dk], [grupacen], " +
                "[iddokkoryg], [wartoscSp], [exp_fk], [waluta], [kurs], [zyskdod], [paragon], [ko" +
                "d_obcy], [magazyn], [rozlmg], [formaplatn], [schemat], [datarej], [bufor], [supe" +
                "r], [anulowany], [wystawil], [createdBy], [createdDate], [modifiedBy], [modified" +
                "Date], [rr], [datawplywu], [walNetto], [walBrutto], [statusRDF], [guid], [typcen" +
                "y], [splitPayment], [statusMig], [zeroVatRate]) VALUES (@flag, @aktywny, @subtyp" +
                ", @typ, @znacznik, @rodzaj, @katalog, @info, @kod, @seria, @serianr, @okres, @se" +
                "riadzial, @nazwa, @data, @datasp, @opis, @khid, @khadid, @odid, @odadid, @ok, @w" +
                "platy, @rabat, @plattyp, @plattermin, @netto, @vat, @odebrane, @typ_dk, @grupace" +
                "n, @iddokkoryg, @wartoscSp, @exp_fk, @waluta, @kurs, @zyskdod, @paragon, @kod_ob" +
                "cy, @magazyn, @rozlmg, @formaplatn, @schemat, @datarej, @bufor, @super, @anulowa" +
                "ny, @wystawil, @createdBy, @createdDate, @modifiedBy, @modifiedDate, @rr, @dataw" +
                "plywu, @walNetto, @walBrutto, @statusRDF, @guid, @typceny, @splitPayment, @statu" +
                "sMig, @zeroVatRate);\r\nSELECT id, flag, aktywny, subtyp, typ, znacznik, rodzaj, k" +
                "atalog, info, kod, seria, serianr, okres, seriadzial, nazwa, data, datasp, opis," +
                " khid, khadid, odid, odadid, ok, wplaty, rabat, plattyp, plattermin, netto, vat," +
                " odebrane, typ_dk, grupacen, iddokkoryg, wartoscSp, exp_fk, waluta, kurs, zyskdo" +
                "d, paragon, kod_obcy, magazyn, rozlmg, formaplatn, schemat, datarej, bufor, supe" +
                "r, anulowany, wystawil, createdBy, createdDate, modifiedBy, modifiedDate, rr, da" +
                "tawplywu, walNetto, walBrutto, statusRDF, guid, typceny, splitPayment, statusMig" +
                ", zeroVatRate FROM HM.ZO WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aktywny", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aktywny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtyp", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtyp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@znacznik", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "znacznik", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@info", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "info", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serianr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serianr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@okres", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "okres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seriadzial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seriadzial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nazwa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nazwa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datasp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ok", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wplaty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wplaty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rabat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rabat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@plattermin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@netto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "netto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odebrane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odebrane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typ_dk", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ_dk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grupacen", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grupacen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscSp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscSp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exp_fk", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exp_fk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@waluta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "waluta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kurs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kurs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zyskdod", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zyskdod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paragon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paragon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_obcy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_obcy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rozlmg", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rozlmg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@schemat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "schemat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datarej", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bufor", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bufor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anulowany", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anulowany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rr", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datawplywu", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@walNetto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walNetto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@walBrutto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walBrutto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusRDF", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusRDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typceny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typceny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@splitPayment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "splitPayment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusMig", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusMig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zeroVatRate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zeroVatRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [HM].[ZO] SET [flag] = @flag, [aktywny] = @aktywny, [subtyp] = @subtyp, [t" +
                "yp] = @typ, [znacznik] = @znacznik, [rodzaj] = @rodzaj, [katalog] = @katalog, [i" +
                "nfo] = @info, [kod] = @kod, [seria] = @seria, [serianr] = @serianr, [okres] = @o" +
                "kres, [seriadzial] = @seriadzial, [nazwa] = @nazwa, [data] = @data, [datasp] = @" +
                "datasp, [opis] = @opis, [khid] = @khid, [khadid] = @khadid, [odid] = @odid, [oda" +
                "did] = @odadid, [ok] = @ok, [wplaty] = @wplaty, [rabat] = @rabat, [plattyp] = @p" +
                "lattyp, [plattermin] = @plattermin, [netto] = @netto, [vat] = @vat, [odebrane] =" +
                " @odebrane, [typ_dk] = @typ_dk, [grupacen] = @grupacen, [iddokkoryg] = @iddokkor" +
                "yg, [wartoscSp] = @wartoscSp, [exp_fk] = @exp_fk, [waluta] = @waluta, [kurs] = @" +
                "kurs, [zyskdod] = @zyskdod, [paragon] = @paragon, [kod_obcy] = @kod_obcy, [magaz" +
                "yn] = @magazyn, [rozlmg] = @rozlmg, [formaplatn] = @formaplatn, [schemat] = @sch" +
                "emat, [datarej] = @datarej, [bufor] = @bufor, [super] = @super, [anulowany] = @a" +
                "nulowany, [wystawil] = @wystawil, [createdBy] = @createdBy, [createdDate] = @cre" +
                "atedDate, [modifiedBy] = @modifiedBy, [modifiedDate] = @modifiedDate, [rr] = @rr" +
                ", [datawplywu] = @datawplywu, [walNetto] = @walNetto, [walBrutto] = @walBrutto, " +
                "[statusRDF] = @statusRDF, [guid] = @guid, [typceny] = @typceny, [splitPayment] =" +
                " @splitPayment, [statusMig] = @statusMig, [zeroVatRate] = @zeroVatRate WHERE (([" +
                "id] = @Original_id) AND ([flag] = @Original_flag) AND ([aktywny] = @Original_akt" +
                "ywny) AND ([subtyp] = @Original_subtyp) AND ([typ] = @Original_typ) AND ([znaczn" +
                "ik] = @Original_znacznik) AND ((@IsNull_rodzaj = 1 AND [rodzaj] IS NULL) OR ([ro" +
                "dzaj] = @Original_rodzaj)) AND ((@IsNull_katalog = 1 AND [katalog] IS NULL) OR (" +
                "[katalog] = @Original_katalog)) AND ([info] = @Original_info) AND ([kod] = @Orig" +
                "inal_kod) AND ([seria] = @Original_seria) AND ([serianr] = @Original_serianr) AN" +
                "D ([okres] = @Original_okres) AND ([seriadzial] = @Original_seriadzial) AND ([na" +
                "zwa] = @Original_nazwa) AND ((@IsNull_data = 1 AND [data] IS NULL) OR ([data] = " +
                "@Original_data)) AND ((@IsNull_datasp = 1 AND [datasp] IS NULL) OR ([datasp] = @" +
                "Original_datasp)) AND ([opis] = @Original_opis) AND ((@IsNull_khid = 1 AND [khid" +
                "] IS NULL) OR ([khid] = @Original_khid)) AND ((@IsNull_khadid = 1 AND [khadid] I" +
                "S NULL) OR ([khadid] = @Original_khadid)) AND ((@IsNull_odid = 1 AND [odid] IS N" +
                "ULL) OR ([odid] = @Original_odid)) AND ((@IsNull_odadid = 1 AND [odadid] IS NULL" +
                ") OR ([odadid] = @Original_odadid)) AND ([ok] = @Original_ok) AND ([wplaty] = @O" +
                "riginal_wplaty) AND ([rabat] = @Original_rabat) AND ((@IsNull_plattyp = 1 AND [p" +
                "lattyp] IS NULL) OR ([plattyp] = @Original_plattyp)) AND ((@IsNull_plattermin = " +
                "1 AND [plattermin] IS NULL) OR ([plattermin] = @Original_plattermin)) AND ([nett" +
                "o] = @Original_netto) AND ([vat] = @Original_vat) AND ([odebrane] = @Original_od" +
                "ebrane) AND ([typ_dk] = @Original_typ_dk) AND ([grupacen] = @Original_grupacen) " +
                "AND ((@IsNull_iddokkoryg = 1 AND [iddokkoryg] IS NULL) OR ([iddokkoryg] = @Origi" +
                "nal_iddokkoryg)) AND ([wartoscSp] = @Original_wartoscSp) AND ([exp_fk] = @Origin" +
                "al_exp_fk) AND ([waluta] = @Original_waluta) AND ([kurs] = @Original_kurs) AND (" +
                "[zyskdod] = @Original_zyskdod) AND ([paragon] = @Original_paragon) AND ([kod_obc" +
                "y] = @Original_kod_obcy) AND ((@IsNull_magazyn = 1 AND [magazyn] IS NULL) OR ([m" +
                "agazyn] = @Original_magazyn)) AND ([rozlmg] = @Original_rozlmg) AND ((@IsNull_fo" +
                "rmaplatn = 1 AND [formaplatn] IS NULL) OR ([formaplatn] = @Original_formaplatn))" +
                " AND ([schemat] = @Original_schemat) AND ((@IsNull_datarej = 1 AND [datarej] IS " +
                "NULL) OR ([datarej] = @Original_datarej)) AND ([bufor] = @Original_bufor) AND ((" +
                "@IsNull_super = 1 AND [super] IS NULL) OR ([super] = @Original_super)) AND ([anu" +
                "lowany] = @Original_anulowany) AND ((@IsNull_wystawil = 1 AND [wystawil] IS NULL" +
                ") OR ([wystawil] = @Original_wystawil)) AND ((@IsNull_createdBy = 1 AND [created" +
                "By] IS NULL) OR ([createdBy] = @Original_createdBy)) AND ((@IsNull_createdDate =" +
                " 1 AND [createdDate] IS NULL) OR ([createdDate] = @Original_createdDate)) AND ((" +
                "@IsNull_modifiedBy = 1 AND [modifiedBy] IS NULL) OR ([modifiedBy] = @Original_mo" +
                "difiedBy)) AND ((@IsNull_modifiedDate = 1 AND [modifiedDate] IS NULL) OR ([modif" +
                "iedDate] = @Original_modifiedDate)) AND ([rr] = @Original_rr) AND ((@IsNull_data" +
                "wplywu = 1 AND [datawplywu] IS NULL) OR ([datawplywu] = @Original_datawplywu)) A" +
                "ND ([walNetto] = @Original_walNetto) AND ([walBrutto] = @Original_walBrutto) AND" +
                " ([statusRDF] = @Original_statusRDF) AND ([guid] = @Original_guid) AND ([typceny" +
                "] = @Original_typceny) AND ([splitPayment] = @Original_splitPayment) AND ([statu" +
                "sMig] = @Original_statusMig) AND ([zeroVatRate] = @Original_zeroVatRate));\r\nSELE" +
                "CT id, flag, aktywny, subtyp, typ, znacznik, rodzaj, katalog, info, kod, seria, " +
                "serianr, okres, seriadzial, nazwa, data, datasp, opis, khid, khadid, odid, odadi" +
                "d, ok, wplaty, rabat, plattyp, plattermin, netto, vat, odebrane, typ_dk, grupace" +
                "n, iddokkoryg, wartoscSp, exp_fk, waluta, kurs, zyskdod, paragon, kod_obcy, maga" +
                "zyn, rozlmg, formaplatn, schemat, datarej, bufor, super, anulowany, wystawil, cr" +
                "eatedBy, createdDate, modifiedBy, modifiedDate, rr, datawplywu, walNetto, walBru" +
                "tto, statusRDF, guid, typceny, splitPayment, statusMig, zeroVatRate FROM HM.ZO W" +
                "HERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aktywny", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aktywny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subtyp", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtyp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@znacznik", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "znacznik", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@info", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "info", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serianr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serianr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@okres", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "okres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seriadzial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seriadzial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nazwa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nazwa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@data", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datasp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@opis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ok", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ok", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wplaty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wplaty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rabat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rabat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@plattermin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@netto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "netto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@odebrane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odebrane", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typ_dk", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ_dk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grupacen", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grupacen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wartoscSp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscSp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exp_fk", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exp_fk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@waluta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "waluta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kurs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kurs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zyskdod", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zyskdod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paragon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paragon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@kod_obcy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_obcy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rozlmg", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rozlmg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@schemat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "schemat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datarej", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bufor", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bufor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@anulowany", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anulowany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createdDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rr", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@datawplywu", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@walNetto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walNetto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@walBrutto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walBrutto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusRDF", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusRDF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typceny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typceny", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@splitPayment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "splitPayment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@statusMig", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusMig", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zeroVatRate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zeroVatRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flag", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aktywny", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aktywny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subtyp", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subtyp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typ", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_znacznik", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "znacznik", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rodzaj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rodzaj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_katalog", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "katalog", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_info", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "info", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seria", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_serianr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serianr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_okres", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "okres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seriadzial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seriadzial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nazwa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nazwa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_data", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datasp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datasp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datasp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_opis", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "opis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_khid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_khadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "khadid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odadid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odadid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ok", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ok", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wplaty", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wplaty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rabat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rabat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_plattyp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattyp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_plattermin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_plattermin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "plattermin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_netto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "netto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vat", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_odebrane", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "odebrane", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typ_dk", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typ_dk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grupacen", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grupacen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_iddokkoryg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iddokkoryg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wartoscSp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wartoscSp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_exp_fk", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "exp_fk", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_waluta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "waluta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kurs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kurs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zyskdod", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zyskdod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_paragon", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paragon", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_kod_obcy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "kod_obcy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_magazyn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "magazyn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rozlmg", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rozlmg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_formaplatn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "formaplatn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_schemat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "schemat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datarej", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datarej", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datarej", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bufor", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bufor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_super", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "super", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_anulowany", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "anulowany", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wystawil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wystawil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createdDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createdDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createdDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_modifiedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rr", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_datawplywu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_datawplywu", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "datawplywu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_walNetto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walNetto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_walBrutto", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "walBrutto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusRDF", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusRDF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_guid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "guid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_typceny", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "typceny", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_splitPayment", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "splitPayment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_statusMig", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "statusMig", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zeroVatRate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zeroVatRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::S4M.Properties.Settings.Default.MIRKOERPConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, flag, aktywny, subtyp, typ, znacznik, rodzaj, katalog, info, kod, seria, serianr, okres, seriadzial, nazwa, data, datasp, opis, khid, khadid, odid, odadid, ok, wplaty, rabat, plattyp, plattermin, netto, vat, odebrane, typ_dk, grupacen, iddokkoryg, wartoscSp, exp_fk, waluta, kurs, zyskdod, paragon, kod_obcy, magazyn, rozlmg, formaplatn, schemat, datarej, bufor, super, anulowany, wystawil, createdBy, createdDate, modifiedBy, modifiedDate, rr, datawplywu, walNetto, walBrutto, statusRDF, guid, typceny, splitPayment, statusMig, zeroVatRate FROM HM.ZO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRapZam.ZODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRapZam.ZODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRapZam.ZODataTable dataTable = new DataSetRapZam.ZODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRapZam.ZODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRapZam dataSet) {
            return this.Adapter.Update(dataSet, "ZO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    short Original_flag, 
                    bool Original_aktywny, 
                    short Original_subtyp, 
                    short Original_typ, 
                    short Original_znacznik, 
                    global::System.Nullable<int> Original_rodzaj, 
                    global::System.Nullable<int> Original_katalog, 
                    short Original_info, 
                    string Original_kod, 
                    string Original_seria, 
                    int Original_serianr, 
                    short Original_okres, 
                    int Original_seriadzial, 
                    string Original_nazwa, 
                    global::System.Nullable<global::System.DateTime> Original_data, 
                    global::System.Nullable<global::System.DateTime> Original_datasp, 
                    string Original_opis, 
                    global::System.Nullable<int> Original_khid, 
                    global::System.Nullable<int> Original_khadid, 
                    global::System.Nullable<int> Original_odid, 
                    global::System.Nullable<int> Original_odadid, 
                    short Original_ok, 
                    double Original_wplaty, 
                    double Original_rabat, 
                    global::System.Nullable<int> Original_plattyp, 
                    global::System.Nullable<global::System.DateTime> Original_plattermin, 
                    double Original_netto, 
                    double Original_vat, 
                    string Original_odebrane, 
                    string Original_typ_dk, 
                    short Original_grupacen, 
                    global::System.Nullable<int> Original_iddokkoryg, 
                    double Original_wartoscSp, 
                    short Original_exp_fk, 
                    string Original_waluta, 
                    double Original_kurs, 
                    double Original_zyskdod, 
                    int Original_paragon, 
                    string Original_kod_obcy, 
                    global::System.Nullable<int> Original_magazyn, 
                    short Original_rozlmg, 
                    global::System.Nullable<int> Original_formaplatn, 
                    string Original_schemat, 
                    global::System.Nullable<global::System.DateTime> Original_datarej, 
                    short Original_bufor, 
                    global::System.Nullable<int> Original_super, 
                    short Original_anulowany, 
                    global::System.Nullable<int> Original_wystawil, 
                    global::System.Nullable<int> Original_createdBy, 
                    global::System.Nullable<global::System.DateTime> Original_createdDate, 
                    global::System.Nullable<int> Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_modifiedDate, 
                    short Original_rr, 
                    global::System.Nullable<global::System.DateTime> Original_datawplywu, 
                    double Original_walNetto, 
                    double Original_walBrutto, 
                    short Original_statusRDF, 
                    System.Guid Original_guid, 
                    int Original_typceny, 
                    bool Original_splitPayment, 
                    short Original_statusMig, 
                    bool Original_zeroVatRate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_flag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_aktywny));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_subtyp));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_typ));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_znacznik));
            if ((Original_rodzaj.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_rodzaj.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_katalog.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_katalog.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((short)(Original_info));
            if ((Original_kod == null)) {
                throw new global::System.ArgumentNullException("Original_kod");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_kod));
            }
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_seria));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_serianr));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_okres));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_seriadzial));
            if ((Original_nazwa == null)) {
                throw new global::System.ArgumentNullException("Original_nazwa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_nazwa));
            }
            if ((Original_data.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_data.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_datasp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_datasp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_opis == null)) {
                throw new global::System.ArgumentNullException("Original_opis");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_opis));
            }
            if ((Original_khid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_khid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_khadid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_khadid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_odid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((int)(Original_odid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_odadid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((int)(Original_odadid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[30].Value = ((short)(Original_ok));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_wplaty));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_rabat));
            if ((Original_plattyp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_plattyp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_plattermin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_plattermin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_netto));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_vat));
            if ((Original_odebrane == null)) {
                throw new global::System.ArgumentNullException("Original_odebrane");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_odebrane));
            }
            if ((Original_typ_dk == null)) {
                throw new global::System.ArgumentNullException("Original_typ_dk");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_typ_dk));
            }
            this.Adapter.DeleteCommand.Parameters[41].Value = ((short)(Original_grupacen));
            if ((Original_iddokkoryg.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_iddokkoryg.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_wartoscSp));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((short)(Original_exp_fk));
            if ((Original_waluta == null)) {
                throw new global::System.ArgumentNullException("Original_waluta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_waluta));
            }
            this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_kurs));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_zyskdod));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_paragon));
            if ((Original_kod_obcy == null)) {
                throw new global::System.ArgumentNullException("Original_kod_obcy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_kod_obcy));
            }
            if ((Original_magazyn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((int)(Original_magazyn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[53].Value = ((short)(Original_rozlmg));
            if ((Original_formaplatn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((int)(Original_formaplatn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_schemat == null)) {
                throw new global::System.ArgumentNullException("Original_schemat");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_schemat));
            }
            if ((Original_datarej.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTime)(Original_datarej.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[59].Value = ((short)(Original_bufor));
            if ((Original_super.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_super.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[62].Value = ((short)(Original_anulowany));
            if ((Original_wystawil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_wystawil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_createdBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_createdBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_createdDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_createdDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_modifiedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_modifiedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_modifiedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((System.DateTime)(Original_modifiedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[73].Value = ((short)(Original_rr));
            if ((Original_datawplywu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((System.DateTime)(Original_datawplywu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[76].Value = ((double)(Original_walNetto));
            this.Adapter.DeleteCommand.Parameters[77].Value = ((double)(Original_walBrutto));
            this.Adapter.DeleteCommand.Parameters[78].Value = ((short)(Original_statusRDF));
            this.Adapter.DeleteCommand.Parameters[79].Value = ((System.Guid)(Original_guid));
            this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_typceny));
            this.Adapter.DeleteCommand.Parameters[81].Value = ((bool)(Original_splitPayment));
            this.Adapter.DeleteCommand.Parameters[82].Value = ((short)(Original_statusMig));
            this.Adapter.DeleteCommand.Parameters[83].Value = ((bool)(Original_zeroVatRate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    short flag, 
                    bool aktywny, 
                    short subtyp, 
                    short typ, 
                    short znacznik, 
                    global::System.Nullable<int> rodzaj, 
                    global::System.Nullable<int> katalog, 
                    short info, 
                    string kod, 
                    string seria, 
                    int serianr, 
                    short okres, 
                    int seriadzial, 
                    string nazwa, 
                    global::System.Nullable<global::System.DateTime> data, 
                    global::System.Nullable<global::System.DateTime> datasp, 
                    string opis, 
                    global::System.Nullable<int> khid, 
                    global::System.Nullable<int> khadid, 
                    global::System.Nullable<int> odid, 
                    global::System.Nullable<int> odadid, 
                    short ok, 
                    double wplaty, 
                    double rabat, 
                    global::System.Nullable<int> plattyp, 
                    global::System.Nullable<global::System.DateTime> plattermin, 
                    double netto, 
                    double vat, 
                    string odebrane, 
                    string typ_dk, 
                    short grupacen, 
                    global::System.Nullable<int> iddokkoryg, 
                    double wartoscSp, 
                    short exp_fk, 
                    string waluta, 
                    double kurs, 
                    double zyskdod, 
                    int paragon, 
                    string kod_obcy, 
                    global::System.Nullable<int> magazyn, 
                    short rozlmg, 
                    global::System.Nullable<int> formaplatn, 
                    string schemat, 
                    global::System.Nullable<global::System.DateTime> datarej, 
                    short bufor, 
                    global::System.Nullable<int> super, 
                    short anulowany, 
                    global::System.Nullable<int> wystawil, 
                    global::System.Nullable<int> createdBy, 
                    global::System.Nullable<global::System.DateTime> createdDate, 
                    global::System.Nullable<int> modifiedBy, 
                    global::System.Nullable<global::System.DateTime> modifiedDate, 
                    short rr, 
                    global::System.Nullable<global::System.DateTime> datawplywu, 
                    double walNetto, 
                    double walBrutto, 
                    short statusRDF, 
                    System.Guid guid, 
                    int typceny, 
                    bool splitPayment, 
                    short statusMig, 
                    bool zeroVatRate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(flag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(aktywny));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(subtyp));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(typ));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(znacznik));
            if ((rodzaj.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(rodzaj.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((katalog.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(katalog.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((short)(info));
            if ((kod == null)) {
                throw new global::System.ArgumentNullException("kod");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(kod));
            }
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(seria));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(serianr));
            this.Adapter.InsertCommand.Parameters[11].Value = ((short)(okres));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(seriadzial));
            if ((nazwa == null)) {
                throw new global::System.ArgumentNullException("nazwa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(nazwa));
            }
            if ((data.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(data.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((datasp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(datasp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((opis == null)) {
                throw new global::System.ArgumentNullException("opis");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(opis));
            }
            if ((khid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(khid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((khadid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(khadid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((odid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(odid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((odadid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(odadid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((short)(ok));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(wplaty));
            this.Adapter.InsertCommand.Parameters[23].Value = ((double)(rabat));
            if ((plattyp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(plattyp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((plattermin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(plattermin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((double)(netto));
            this.Adapter.InsertCommand.Parameters[27].Value = ((double)(vat));
            if ((odebrane == null)) {
                throw new global::System.ArgumentNullException("odebrane");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(odebrane));
            }
            if ((typ_dk == null)) {
                throw new global::System.ArgumentNullException("typ_dk");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(typ_dk));
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((short)(grupacen));
            if ((iddokkoryg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(iddokkoryg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(wartoscSp));
            this.Adapter.InsertCommand.Parameters[33].Value = ((short)(exp_fk));
            if ((waluta == null)) {
                throw new global::System.ArgumentNullException("waluta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(waluta));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((double)(kurs));
            this.Adapter.InsertCommand.Parameters[36].Value = ((double)(zyskdod));
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(paragon));
            if ((kod_obcy == null)) {
                throw new global::System.ArgumentNullException("kod_obcy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(kod_obcy));
            }
            if ((magazyn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(magazyn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((short)(rozlmg));
            if ((formaplatn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(formaplatn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((schemat == null)) {
                throw new global::System.ArgumentNullException("schemat");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(schemat));
            }
            if ((datarej.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(datarej.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((short)(bufor));
            if ((super.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(super.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((short)(anulowany));
            if ((wystawil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(wystawil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((createdBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(createdBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((createdDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(createdDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((modifiedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((int)(modifiedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((modifiedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(modifiedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((short)(rr));
            if ((datawplywu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(datawplywu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((double)(walNetto));
            this.Adapter.InsertCommand.Parameters[55].Value = ((double)(walBrutto));
            this.Adapter.InsertCommand.Parameters[56].Value = ((short)(statusRDF));
            this.Adapter.InsertCommand.Parameters[57].Value = ((System.Guid)(guid));
            this.Adapter.InsertCommand.Parameters[58].Value = ((int)(typceny));
            this.Adapter.InsertCommand.Parameters[59].Value = ((bool)(splitPayment));
            this.Adapter.InsertCommand.Parameters[60].Value = ((short)(statusMig));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(zeroVatRate));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short flag, 
                    bool aktywny, 
                    short subtyp, 
                    short typ, 
                    short znacznik, 
                    global::System.Nullable<int> rodzaj, 
                    global::System.Nullable<int> katalog, 
                    short info, 
                    string kod, 
                    string seria, 
                    int serianr, 
                    short okres, 
                    int seriadzial, 
                    string nazwa, 
                    global::System.Nullable<global::System.DateTime> data, 
                    global::System.Nullable<global::System.DateTime> datasp, 
                    string opis, 
                    global::System.Nullable<int> khid, 
                    global::System.Nullable<int> khadid, 
                    global::System.Nullable<int> odid, 
                    global::System.Nullable<int> odadid, 
                    short ok, 
                    double wplaty, 
                    double rabat, 
                    global::System.Nullable<int> plattyp, 
                    global::System.Nullable<global::System.DateTime> plattermin, 
                    double netto, 
                    double vat, 
                    string odebrane, 
                    string typ_dk, 
                    short grupacen, 
                    global::System.Nullable<int> iddokkoryg, 
                    double wartoscSp, 
                    short exp_fk, 
                    string waluta, 
                    double kurs, 
                    double zyskdod, 
                    int paragon, 
                    string kod_obcy, 
                    global::System.Nullable<int> magazyn, 
                    short rozlmg, 
                    global::System.Nullable<int> formaplatn, 
                    string schemat, 
                    global::System.Nullable<global::System.DateTime> datarej, 
                    short bufor, 
                    global::System.Nullable<int> super, 
                    short anulowany, 
                    global::System.Nullable<int> wystawil, 
                    global::System.Nullable<int> createdBy, 
                    global::System.Nullable<global::System.DateTime> createdDate, 
                    global::System.Nullable<int> modifiedBy, 
                    global::System.Nullable<global::System.DateTime> modifiedDate, 
                    short rr, 
                    global::System.Nullable<global::System.DateTime> datawplywu, 
                    double walNetto, 
                    double walBrutto, 
                    short statusRDF, 
                    System.Guid guid, 
                    int typceny, 
                    bool splitPayment, 
                    short statusMig, 
                    bool zeroVatRate, 
                    int Original_id, 
                    short Original_flag, 
                    bool Original_aktywny, 
                    short Original_subtyp, 
                    short Original_typ, 
                    short Original_znacznik, 
                    global::System.Nullable<int> Original_rodzaj, 
                    global::System.Nullable<int> Original_katalog, 
                    short Original_info, 
                    string Original_kod, 
                    string Original_seria, 
                    int Original_serianr, 
                    short Original_okres, 
                    int Original_seriadzial, 
                    string Original_nazwa, 
                    global::System.Nullable<global::System.DateTime> Original_data, 
                    global::System.Nullable<global::System.DateTime> Original_datasp, 
                    string Original_opis, 
                    global::System.Nullable<int> Original_khid, 
                    global::System.Nullable<int> Original_khadid, 
                    global::System.Nullable<int> Original_odid, 
                    global::System.Nullable<int> Original_odadid, 
                    short Original_ok, 
                    double Original_wplaty, 
                    double Original_rabat, 
                    global::System.Nullable<int> Original_plattyp, 
                    global::System.Nullable<global::System.DateTime> Original_plattermin, 
                    double Original_netto, 
                    double Original_vat, 
                    string Original_odebrane, 
                    string Original_typ_dk, 
                    short Original_grupacen, 
                    global::System.Nullable<int> Original_iddokkoryg, 
                    double Original_wartoscSp, 
                    short Original_exp_fk, 
                    string Original_waluta, 
                    double Original_kurs, 
                    double Original_zyskdod, 
                    int Original_paragon, 
                    string Original_kod_obcy, 
                    global::System.Nullable<int> Original_magazyn, 
                    short Original_rozlmg, 
                    global::System.Nullable<int> Original_formaplatn, 
                    string Original_schemat, 
                    global::System.Nullable<global::System.DateTime> Original_datarej, 
                    short Original_bufor, 
                    global::System.Nullable<int> Original_super, 
                    short Original_anulowany, 
                    global::System.Nullable<int> Original_wystawil, 
                    global::System.Nullable<int> Original_createdBy, 
                    global::System.Nullable<global::System.DateTime> Original_createdDate, 
                    global::System.Nullable<int> Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_modifiedDate, 
                    short Original_rr, 
                    global::System.Nullable<global::System.DateTime> Original_datawplywu, 
                    double Original_walNetto, 
                    double Original_walBrutto, 
                    short Original_statusRDF, 
                    System.Guid Original_guid, 
                    int Original_typceny, 
                    bool Original_splitPayment, 
                    short Original_statusMig, 
                    bool Original_zeroVatRate, 
                    int id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(flag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(aktywny));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(subtyp));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(typ));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(znacznik));
            if ((rodzaj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(rodzaj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((katalog.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(katalog.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(info));
            if ((kod == null)) {
                throw new global::System.ArgumentNullException("kod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(kod));
            }
            if ((seria == null)) {
                throw new global::System.ArgumentNullException("seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(seria));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(serianr));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(okres));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(seriadzial));
            if ((nazwa == null)) {
                throw new global::System.ArgumentNullException("nazwa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(nazwa));
            }
            if ((data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((datasp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(datasp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((opis == null)) {
                throw new global::System.ArgumentNullException("opis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(opis));
            }
            if ((khid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(khid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((khadid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(khadid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((odid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(odid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((odadid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(odadid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(ok));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(wplaty));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(rabat));
            if ((plattyp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(plattyp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((plattermin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(plattermin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(netto));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(vat));
            if ((odebrane == null)) {
                throw new global::System.ArgumentNullException("odebrane");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(odebrane));
            }
            if ((typ_dk == null)) {
                throw new global::System.ArgumentNullException("typ_dk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(typ_dk));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(grupacen));
            if ((iddokkoryg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(iddokkoryg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(wartoscSp));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(exp_fk));
            if ((waluta == null)) {
                throw new global::System.ArgumentNullException("waluta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(waluta));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(kurs));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(zyskdod));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(paragon));
            if ((kod_obcy == null)) {
                throw new global::System.ArgumentNullException("kod_obcy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(kod_obcy));
            }
            if ((magazyn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(magazyn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((short)(rozlmg));
            if ((formaplatn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(formaplatn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((schemat == null)) {
                throw new global::System.ArgumentNullException("schemat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(schemat));
            }
            if ((datarej.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(datarej.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((short)(bufor));
            if ((super.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(super.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((short)(anulowany));
            if ((wystawil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(wystawil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((createdBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(createdBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((createdDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(createdDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((modifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(modifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((modifiedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(modifiedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((short)(rr));
            if ((datawplywu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(datawplywu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(walNetto));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(walBrutto));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((short)(statusRDF));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((System.Guid)(guid));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(typceny));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(splitPayment));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((short)(statusMig));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(zeroVatRate));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((short)(Original_flag));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_aktywny));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((short)(Original_subtyp));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((short)(Original_typ));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((short)(Original_znacznik));
            if ((Original_rodzaj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(Original_rodzaj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_katalog.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_katalog.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((short)(Original_info));
            if ((Original_kod == null)) {
                throw new global::System.ArgumentNullException("Original_kod");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_kod));
            }
            if ((Original_seria == null)) {
                throw new global::System.ArgumentNullException("Original_seria");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_seria));
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_serianr));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((short)(Original_okres));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_seriadzial));
            if ((Original_nazwa == null)) {
                throw new global::System.ArgumentNullException("Original_nazwa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_nazwa));
            }
            if ((Original_data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_datasp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((System.DateTime)(Original_datasp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_opis == null)) {
                throw new global::System.ArgumentNullException("Original_opis");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_opis));
            }
            if ((Original_khid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_khid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_khadid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_khadid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_odid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_odid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_odadid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_odadid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[92].Value = ((short)(Original_ok));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((double)(Original_wplaty));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((double)(Original_rabat));
            if ((Original_plattyp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Original_plattyp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_plattermin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((System.DateTime)(Original_plattermin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(Original_netto));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((double)(Original_vat));
            if ((Original_odebrane == null)) {
                throw new global::System.ArgumentNullException("Original_odebrane");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_odebrane));
            }
            if ((Original_typ_dk == null)) {
                throw new global::System.ArgumentNullException("Original_typ_dk");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_typ_dk));
            }
            this.Adapter.UpdateCommand.Parameters[103].Value = ((short)(Original_grupacen));
            if ((Original_iddokkoryg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_iddokkoryg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((double)(Original_wartoscSp));
            this.Adapter.UpdateCommand.Parameters[107].Value = ((short)(Original_exp_fk));
            if ((Original_waluta == null)) {
                throw new global::System.ArgumentNullException("Original_waluta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_waluta));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(Original_kurs));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((double)(Original_zyskdod));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_paragon));
            if ((Original_kod_obcy == null)) {
                throw new global::System.ArgumentNullException("Original_kod_obcy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_kod_obcy));
            }
            if ((Original_magazyn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_magazyn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[115].Value = ((short)(Original_rozlmg));
            if ((Original_formaplatn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(Original_formaplatn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_schemat == null)) {
                throw new global::System.ArgumentNullException("Original_schemat");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_schemat));
            }
            if ((Original_datarej.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((System.DateTime)(Original_datarej.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[121].Value = ((short)(Original_bufor));
            if ((Original_super.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(Original_super.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[124].Value = ((short)(Original_anulowany));
            if ((Original_wystawil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((int)(Original_wystawil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_createdBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(Original_createdBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_createdDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_createdDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_modifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(Original_modifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_modifiedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((System.DateTime)(Original_modifiedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[135].Value = ((short)(Original_rr));
            if ((Original_datawplywu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTime)(Original_datawplywu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[138].Value = ((double)(Original_walNetto));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((double)(Original_walBrutto));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((short)(Original_statusRDF));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((System.Guid)(Original_guid));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_typceny));
            this.Adapter.UpdateCommand.Parameters[143].Value = ((bool)(Original_splitPayment));
            this.Adapter.UpdateCommand.Parameters[144].Value = ((short)(Original_statusMig));
            this.Adapter.UpdateCommand.Parameters[145].Value = ((bool)(Original_zeroVatRate));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short flag, 
                    bool aktywny, 
                    short subtyp, 
                    short typ, 
                    short znacznik, 
                    global::System.Nullable<int> rodzaj, 
                    global::System.Nullable<int> katalog, 
                    short info, 
                    string kod, 
                    string seria, 
                    int serianr, 
                    short okres, 
                    int seriadzial, 
                    string nazwa, 
                    global::System.Nullable<global::System.DateTime> data, 
                    global::System.Nullable<global::System.DateTime> datasp, 
                    string opis, 
                    global::System.Nullable<int> khid, 
                    global::System.Nullable<int> khadid, 
                    global::System.Nullable<int> odid, 
                    global::System.Nullable<int> odadid, 
                    short ok, 
                    double wplaty, 
                    double rabat, 
                    global::System.Nullable<int> plattyp, 
                    global::System.Nullable<global::System.DateTime> plattermin, 
                    double netto, 
                    double vat, 
                    string odebrane, 
                    string typ_dk, 
                    short grupacen, 
                    global::System.Nullable<int> iddokkoryg, 
                    double wartoscSp, 
                    short exp_fk, 
                    string waluta, 
                    double kurs, 
                    double zyskdod, 
                    int paragon, 
                    string kod_obcy, 
                    global::System.Nullable<int> magazyn, 
                    short rozlmg, 
                    global::System.Nullable<int> formaplatn, 
                    string schemat, 
                    global::System.Nullable<global::System.DateTime> datarej, 
                    short bufor, 
                    global::System.Nullable<int> super, 
                    short anulowany, 
                    global::System.Nullable<int> wystawil, 
                    global::System.Nullable<int> createdBy, 
                    global::System.Nullable<global::System.DateTime> createdDate, 
                    global::System.Nullable<int> modifiedBy, 
                    global::System.Nullable<global::System.DateTime> modifiedDate, 
                    short rr, 
                    global::System.Nullable<global::System.DateTime> datawplywu, 
                    double walNetto, 
                    double walBrutto, 
                    short statusRDF, 
                    System.Guid guid, 
                    int typceny, 
                    bool splitPayment, 
                    short statusMig, 
                    bool zeroVatRate, 
                    int Original_id, 
                    short Original_flag, 
                    bool Original_aktywny, 
                    short Original_subtyp, 
                    short Original_typ, 
                    short Original_znacznik, 
                    global::System.Nullable<int> Original_rodzaj, 
                    global::System.Nullable<int> Original_katalog, 
                    short Original_info, 
                    string Original_kod, 
                    string Original_seria, 
                    int Original_serianr, 
                    short Original_okres, 
                    int Original_seriadzial, 
                    string Original_nazwa, 
                    global::System.Nullable<global::System.DateTime> Original_data, 
                    global::System.Nullable<global::System.DateTime> Original_datasp, 
                    string Original_opis, 
                    global::System.Nullable<int> Original_khid, 
                    global::System.Nullable<int> Original_khadid, 
                    global::System.Nullable<int> Original_odid, 
                    global::System.Nullable<int> Original_odadid, 
                    short Original_ok, 
                    double Original_wplaty, 
                    double Original_rabat, 
                    global::System.Nullable<int> Original_plattyp, 
                    global::System.Nullable<global::System.DateTime> Original_plattermin, 
                    double Original_netto, 
                    double Original_vat, 
                    string Original_odebrane, 
                    string Original_typ_dk, 
                    short Original_grupacen, 
                    global::System.Nullable<int> Original_iddokkoryg, 
                    double Original_wartoscSp, 
                    short Original_exp_fk, 
                    string Original_waluta, 
                    double Original_kurs, 
                    double Original_zyskdod, 
                    int Original_paragon, 
                    string Original_kod_obcy, 
                    global::System.Nullable<int> Original_magazyn, 
                    short Original_rozlmg, 
                    global::System.Nullable<int> Original_formaplatn, 
                    string Original_schemat, 
                    global::System.Nullable<global::System.DateTime> Original_datarej, 
                    short Original_bufor, 
                    global::System.Nullable<int> Original_super, 
                    short Original_anulowany, 
                    global::System.Nullable<int> Original_wystawil, 
                    global::System.Nullable<int> Original_createdBy, 
                    global::System.Nullable<global::System.DateTime> Original_createdDate, 
                    global::System.Nullable<int> Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_modifiedDate, 
                    short Original_rr, 
                    global::System.Nullable<global::System.DateTime> Original_datawplywu, 
                    double Original_walNetto, 
                    double Original_walBrutto, 
                    short Original_statusRDF, 
                    System.Guid Original_guid, 
                    int Original_typceny, 
                    bool Original_splitPayment, 
                    short Original_statusMig, 
                    bool Original_zeroVatRate) {
            return this.Update(flag, aktywny, subtyp, typ, znacznik, rodzaj, katalog, info, kod, seria, serianr, okres, seriadzial, nazwa, data, datasp, opis, khid, khadid, odid, odadid, ok, wplaty, rabat, plattyp, plattermin, netto, vat, odebrane, typ_dk, grupacen, iddokkoryg, wartoscSp, exp_fk, waluta, kurs, zyskdod, paragon, kod_obcy, magazyn, rozlmg, formaplatn, schemat, datarej, bufor, super, anulowany, wystawil, createdBy, createdDate, modifiedBy, modifiedDate, rr, datawplywu, walNetto, walBrutto, statusRDF, guid, typceny, splitPayment, statusMig, zeroVatRate, Original_id, Original_flag, Original_aktywny, Original_subtyp, Original_typ, Original_znacznik, Original_rodzaj, Original_katalog, Original_info, Original_kod, Original_seria, Original_serianr, Original_okres, Original_seriadzial, Original_nazwa, Original_data, Original_datasp, Original_opis, Original_khid, Original_khadid, Original_odid, Original_odadid, Original_ok, Original_wplaty, Original_rabat, Original_plattyp, Original_plattermin, Original_netto, Original_vat, Original_odebrane, Original_typ_dk, Original_grupacen, Original_iddokkoryg, Original_wartoscSp, Original_exp_fk, Original_waluta, Original_kurs, Original_zyskdod, Original_paragon, Original_kod_obcy, Original_magazyn, Original_rozlmg, Original_formaplatn, Original_schemat, Original_datarej, Original_bufor, Original_super, Original_anulowany, Original_wystawil, Original_createdBy, Original_createdDate, Original_modifiedBy, Original_modifiedDate, Original_rr, Original_datawplywu, Original_walNetto, Original_walBrutto, Original_statusRDF, Original_guid, Original_typceny, Original_splitPayment, Original_statusMig, Original_zeroVatRate, Original_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ZOTableAdapter _zOTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ZOTableAdapter ZOTableAdapter {
            get {
                return this._zOTableAdapter;
            }
            set {
                this._zOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._zOTableAdapter != null) 
                            && (this._zOTableAdapter.Connection != null))) {
                    return this._zOTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._zOTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSetRapZam dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._zOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ZO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_ZO_ZO_IDDOKKORYG"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_ZO_ZO_RODZAJ"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["FK_ZO_ZO_SUPER"], false);
                    result = (result + this._zOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSetRapZam dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._zOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ZO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_ZO_ZO_IDDOKKORYG"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_ZO_ZO_RODZAJ"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["FK_ZO_ZO_SUPER"], false);
                    result = (result + this._zOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSetRapZam dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._zOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ZO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_ZO_ZO_IDDOKKORYG"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_ZO_ZO_RODZAJ"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["FK_ZO_ZO_SUPER"], true);
                    result = (result + this._zOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSetRapZam dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._zOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._zOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Dla wszystkich obiektów TableAdapter, którymi zarządza obiekt TableAdapterManager" +
                        ", muszą być używane te same parametry połączenia.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("Obiekt TableAdapterManager nie zawiera informacji o połączeniu. Ustaw dla każdej " +
                        "właściwości TableAdapter obiektu TableAdapterManager prawidłowe wystąpienie obie" +
                        "ktu TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Nie można rozpocząć transakcji. Bieżące połączenie danych nie obsługuje transakcj" +
                        "i lub bieżący stan nie pozwala na rozpoczęcie transakcji.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._zOTableAdapter != null)) {
                    revertConnections.Add(this._zOTableAdapter, this._zOTableAdapter.Connection);
                    this._zOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._zOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._zOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._zOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._zOTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._zOTableAdapter != null)) {
                    this._zOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._zOTableAdapter]));
                    this._zOTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591